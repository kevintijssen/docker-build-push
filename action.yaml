name: Build and push Docker images
description: Build and push Docker images with Buildx
author: Kevin Tijssen (TNO)

inputs:
  command: 
    description: 'What do you want to do? (build/push/buildAndPush)'
    required: true
    default: 'build'
  name:
    description: 'Image Name'
    required: false
    default: '$GITHUB_WORKFLOW'
  tags:
    description: 'Image tag, default $GITHUB_SHA'
    required: false
    default: '$GITHUB_SHA'
  dockerfile:
    description: 'Name of the Dockerfile (Default is $GITHUB_WORKSPACE/.'
    required: false
    default: '$GITHUB_WORKSPACE/.'
  registry:
    description: 'The name of the registry server'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Docker Build / Push / Build & Push
      shell: bash
      run: |
        case ${{ inputs.command }} in
            (build|push|buildAndPush) ;;
            (*) echo "ERROR: invalid variable '${{ inputs.command }}' for 'command'. Allowed variables are 'build, push, buildAndPush'";
            exit 1;;
        esac

        function build() {
          for tag in $(echo ${{ inputs.tags }} | sed 's/,/ /g'); do

            # Generate complete dockerTag
            if [ -z ${{ inputs.registry }} ]; then
              dockerTag="${{ inputs.name }}:${tag}"
            else
              dockerTag="${{ inputs.registry }}/${{ inputs.name }}:${tag}"
            fi

            echo $dockerTag

            # Run Docker build
            docker build -t $dockerTag ${{ inputs.dockerfile }}
          done
        }

        function push() {
          for tag in $(echo ${{ inputs.tags }} | sed 's/,/ /g'); do

            # Generate complete dockerTag
            if [ -z ${{ inputs.registry }} ]; then
              dockerTag="${{ inputs.name }}:${tag}"
            else
              dockerTag="${{ inputs.registry }}/${{ inputs.name }}:${tag}"
            fi

            # Run Docker push
            docker push $dockerTag
          done
        }

        if [[ ${{ inputs.command }} == "build" ]]; then
          build
          exit 0
        elif [[ ${{ inputs.command }} == "push" ]]; then
          push
          exit 0
        else
          build
          push
          exit 0
        fi